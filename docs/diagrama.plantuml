@startuml

skinparam linetype ortho

class mainGabriel {
  + mainGabriel(): 
  + creationImage(int, double[], int, double[][], double[][]): double[]
  + checkMatrixToArray1D(): void
  + calculateEuclidianDistance(double[], double[][]): double[]
  + getDataBaseLocationFromArgs(String[]): String
  + checkGetColumn(): void
  + runInterative(): void
  + checkCloserVetorTest(): void
  + generateNewImage(int, String, int): void
  + verifySymmetricMatrix(String, int): String
  + calculateFunction2(int, String, int): void
  + checkIgualdadeVetores(double[], double[]): boolean
  + function4(int): void
  + devTeam(): void
  + function1(int): void
  + printLine(int, String): void
  + checkSizeBoundaries(int, int): boolean
  + getEigenValues(double[][]): double[][]
  + checkEuclidianDistance(): void
  + checkSubtractionColumns(): void
  + matrixToArray1D(double[][]): double[]
  + checkCorrectParametersStructure(String[]): boolean
  + getCsvLocationFromUser(int): String
  + checkConstructDiagonalMatrix(): void
  + checkIfIsSymmetric(double[][]): boolean
  + centralizeImages(double[][], double[]): double[][]
  + createSubMatrix(double[][], double[][]): double[][]
  + uiInitialMenu(): void
  + checkMAETest(): void
  + multiplyMatrixEscalar(double[][], double): double[][]
  + calculateMAE(double[][], double[][]): double
  + getColumn(double[][], int): double[]
  + readCSVToMatrix(String): double[][]
  + uiQuitParameterMenu(): void
  + printVector(String, double[]): void
  + getValuesAndIndexArray(double[][], int): double[][]
  + uiDataBase(): void
  + printFunction3(String[], int, double[], int, int): void
  + receiveDataBaseLocation(String[]): String
  + reconstructImage(double[], double[][], double[], int): double[]
  + verifyVectorNumbers(): int
  + calculateMeanVector(double[][]): double[]
  + findMinMaxValues(double[][]): double[]
  + getCSVFileNames(String): String[]
  + checkCsvLocation(String): boolean
  + getEigenVectors(double[][]): double[][]
  + checkGetValuesAndIndexArray(): void
  + receiveNumberVectors(String[]): int
  + decomposeMatrix(double[][]): EigenDecomposition
  + checkNormalization(): void
  + decomposeSymmetricMatrix(int, String): void
  + populateWeightsMatrix(double[][], double[][], double[][]): void
  + verifyCsvLocation(int): String
  + function3(int): void
  + calculateWeights(double[], double[][]): double[]
  + writeArrayAsImage(int[][], String): void
  + checkMultiplication(): void
  + multiplyMatrices(double[][], double[][]): double[][]
  + runTests(): void
  + checkAverageVector(): void
  + saveImage(double[][], String, String, int): void
  + printDistances(String[], double[], int, int): void
  + identifyClosestImage(int, String[], double[], double[][], double[][], double[][], double[][][], int): void
  + fillArrayMax(int[]): void
  + printVectorTests(double[], String): void
  + checkMultiplicationEscalar(): void
  + getMatricesFromCsvFolder(String): double[][][]
  + populateLinearizedImages(double[][], double[][][]): void
  + validateEigenVectors(double[][], int): int
  + array1DToMatrix(double[], double[][]): double[][]
  + quitApplication(): void
  + printFunction1(int, double[][], double[][], double): void
  + uiCsvLocation(): void
  + fillMatrixFromCsv(String, double[][]): void
  + receiveExitConfirmation(String[]): void
  + checkExistanceFileDirectory(String): void
  + checkFunctionOptions(int): boolean
  + function2(int): void
  + printHeaderFunction(String): void
  + checkCentralizeImage(): void
  + uiDevTeam(): void
  + main(String[]): void
  + getCsvLocationFromArgs(String[], int): String
  + checkCalculateWeights(): void
  + reconstructImagesWithEigenfaces(int, String[], double[], double[][], double[][], double[][], double[][][], int): void
  + checkCloserVetor(double[]): int[]
  + checkDataBaseLocation(String): boolean
  + receiveCsvLocation(String[], int): String
  + runNonInterativeOutputs(int, int, String, String[], double[][], double[][][], String): void
  + uiVectorNumbers(): void
  + adjustPrecision(double[][]): void
  + checkReconstructImage(): void
  + verifyDataBaseLocation(): String
  + checkIgualdadeMatrizes(double[][], double[][]): boolean
  + getDataBaseLocationFromUser(): String
  + errorGeneral(String): void
  + normalize(double[][]): double[][]
  + runNonInteractive(String[]): void
  + checkTranspose(): void
  + calculateFunction3(int, String, String, int): void
  + normalizeImage(double[][], double, double): int[][]
  + subtractionColumns(double[], double[]): double[]
  + printMatrix(double[][], String): void
  + adjustValue(double): void
  + verifyFunction(): int
  + getCsvDimensions(String): int[]
  + transposeMatrix(double[][]): double[][]
  + receiveFunction(String[]): int
  + constructDiagonalMatrix(double[][]): double[][]
  + saveMatrixToFile(double[][], String, String, int): void
  + checkSubMatrix(): void
}

@enduml
